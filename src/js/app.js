const slides = [ // новая статичная ( не подразумевает изменений ) переменная, хранит массив строк хранящих в себе имена фонновых изображений:
    '11.jpg', // 0 индекс
    '12.jpg', // 1 индекс
    '13.jpg', // 2 индекс
]

function setHeaderSlider (array) { // функция при вызове которой меняется фон header. (array) - параметр в который при вызове функции передаётся массив с фоновыми изображениями
    const header = document.querySelector('.header'); // новая статичная переменная, хранит DOM элемент header, получая его с помощью класса элемента "header"
    
    // Наглядный, но некорректный пример перебора массива:

    // Для перебора используем цикл for;
    // В цикле создаем !не статичную! переменную "i" - стандартное название для переменной в цикле и задаем значение равное 0;
    // В данном случае переменная i хранит не строку, а число с которым можно проводить математические действия;
    
    // После создания переменной мы говорим, пока переменная "i" равная нулю, будет меньше чем длинна массива ( в данном случае 2, тк в js исчисление длины массива работает по индексам в которых первое значение не 1, а 0 ) ...
    // повторять цикл, то есть все что находиться внутри цикла "for" должно повторяться до того момента, пока значение "i" будет меньше длины массива;
    
    // Последнее 3 значение в свойствах цикла, а именно "i++", означает, что при каждом повторении цикла увеличивать переменную в одну единицу.
    // ( Повторением цикла - называется итерации цикла );

    // Соответственно, всего итерации цикла в данном случае будет 3:
        // 1-я итерация:
            // i=0 < array.length=3 и i++
        // 2-я итерация:    
            // i=1 < array.length=3 и i++ 
        // 3-я итерация:
            // i=2 < array.length=3 и i++ 
        // 4-я итерация:
            // Отсутствует, тк 2 < 3 - конец цикла. Для других случаев есть соответствующие операции типа: "<=", ">=", "==", "===", "<", ">"

    for( let i = 0; i < array.length; i++ ){
        // console.log(array)    // для вывода массива в консоль
        // console.log(array[i]) // вывод все элементов массива
        // console.log(array[0]) // вывод определенного элемента по индексу
    }

    // Похожий алгоритм происходит ниже

    let i = 0; // Создаем не статичную переменную "i" равную числу ноль

    // Используем метод setInterval ( подробнее в гугле, сайт MDN ). 
    // Проще говоря создаем бесконечный цикл итерация, которого происходит каждые 3 секунды.
    // В итерации происходит следующее: 
        // 1. Увеличиваем значение переменной "i" на 1
        // 2. Создаем операцию ветвления "if" и говорим, если переменная "i" меньше чем длина массива, то изменить стилевое свойство элемента DOM "header" - background-image 
        // ( Важно! Когда мы работаем со стилевыми свойствами в js, мы убираем "-" между свойствами и в место него, первую букву свойства делаем заглавной  ) 
        // ( Важно! Когда мы работаем со стилевыми свойствами в js, необходимо добавить на прямую в DOM элемент изменяемое свойство через атрибут style )
        // 3. Если переменная i не меньше чем длина массива то есть i < array.length === false, то происходит ветвление else. Это произойдет в случае того, когда мы отрисуем последний элемент в массиве, на данный момент "13.jpg";
        // в случае этого нам следует: обнулить счетчик "i", вернуться к первому элементу массива и отрисовать его.
        // 4. Так как счетчик будет обнулен соответственно процесс начинается сначала.
        // 5. Для плавной смены изображений в css свойства DOM элемента "header" добавить: "transition-duration: 1s;" 
    
    setInterval(() =>{ 
        i++;
        if( i < array.length ){
            header.style.backgroundImage = `url("img/${array[i]}")`
        }else{
            i = 0;
            header.style.backgroundImage = `url("img/${array[i]}")`
        }
    }, 3000)
}

setHeaderSlider ( slides ) // Вызов функции смены слайдов. Не забываем передать параметр с массивом слайдов "slides" !;
